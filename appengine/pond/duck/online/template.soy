{namespace Pond.Duck.Online.soy}

/**
 * This is a Closure Template.
 *
 * To regenerate just English, run:
 *   make pond-online-en
 *
 * To regenerate all languages, run:
 *   make languages
 */

/**
 * Web page structure.
 */
{template .start}
  <button id="duckCreateButton">
    Create your Duck
  </button>

  <button id="duckUpdateButton">
    Update a Duck
  </button>

  <button id="duckDeleteButton">
    Delete a Duck
  </button>

  <button id="getOpponents">
    Get Opponents
  </button>

  <button id="defaultOpponents">
    Default Opponents
  </button>

  {call Pond.Duck.soy.start}
    {param appName}
      Pond Online{sp}
    {/param}
    {param tabareaHtml}
      <div id="editorBar" class="tab-bar">
        <div class="editor tab tab-selected">{{msg meaning="Games.blocks" desc="IBID"}}Blocks{{/msg}}</div>
        <div class="editor tab">JavaScript</div>
        <div class="tab">Duck Info</div>
      </div>
      <div class="tab-bar-clear"></div>
      <img id="spinner" style="display: none;" src="common/loading.gif" height=15 width=15>
      <div id="blockly" class="tab-content"></div>
      <div id="editor" class="tab-content"></div>
      <div id="duck-info" class="tab-content"></div>
    {/param}
  {/call}

  {call .databaseDialogs /}
  {call BlocklyGames.soy.doneDialog /}
  {call BlocklyGames.soy.abortDialog /}
  {call BlocklyGames.soy.storageDialog /}
{/template}

/**
 * Duck info tab content.
 * @param duck Object storing duck information.
 */
{template .duckInfo}
  <div class="playerDuckIcon">
    <img src="common/1x1.gif" class="playerDuckBody">
    <img src="common/1x1.gif" class="playerDuckHead">
  </div>

  <p>
    Name: {$duck['name']}
  </p>

  <p>
    Ranking: {if $duck['ranking']}{$duck['ranking']}{else}UNRANKED{/if}
  </p>

  {if $duck['published']}
    <button id="unPublishButton">
      Unpublish this Duck
    </button>
  {else}
    <button id="publishButton">
      Publish this Duck
    </button>
  {/if}
  <br>
  <button id="deleteButton">
    Delete this Duck
  </button>
  <br>
  <button id="copyButton">
    Copy this Duck
  </button>
  <br>
  <button id="saveButton">
    Save this Duck
  </button>
{/template}

/**
 * Dialogs for interacting with database.
 */
{template .databaseDialogs}
  <div id="duckCreateDialog" class="dialogHiddenContent">
    <form id="duckCreateForm" action="/pond-storage/create" method="post" onsubmit="return false">
      <header>Create a duck</header>
      <div>Duck name:
        {sp}
        <input id="duckCreateName" type="text" name="name" required>
      </div>
      <input id="duckCreateJs" type="hidden" name="js">
      <input id="duckCreateXml" type="hidden" name="xml">
      <footer><!--Legal disclaimer goes here if needed.--></footer>

      <div class="farSide">
        <button id="duckCreateCancel" type="button">
          {{msg meaning="Games.dialogCancel" desc="IBID"}}Cancel{{/msg}}
        </button>
        <button id="duckCreateOk" class="secondary" type="submit">
          {{msg meaning="Games.dialogOk" desc="IBID"}}OK{{/msg}}
        </button>
      </div>
    </form>
  </div>

  <div id="duckUpdateDialog" class="dialogHiddenContent">
    <form id="duckUpdateForm" action="/pond-storage/update" method="post" onsubmit="return false">
      <header>Update a duck</header>
      <div>URL-safe Duck key:
        {sp}
        <input id="duckUpdateDuckKey" type="text" name="key" required>
      </div>
      <div>New duck name:
        {sp}
        <input id="duckUpdateName" type="text" name="name">
      </div>
      <input id="duckUpdateJs" type="hidden" name="js">
      <input id="duckUpdateXml" type="hidden" name="xml">
      <footer><!--Legal disclaimer goes here if needed.--></footer>

      <div class="farSide">
        <button id="duckUpdateCancel" type="button">
          {{msg meaning="Games.dialogCancel" desc="IBID"}}Cancel{{/msg}}
        </button>
        <button id="duckUpdateOk" class="secondary" type="submit">
          {{msg meaning="Games.dialogOk" desc="IBID"}}OK{{/msg}}
        </button>
      </div>
    </form>
  </div>

  <div id="duckDeleteDialog" class="dialogHiddenContent">
    <form id="duckDeleteForm" action="/pond-storage/delete" method="post" onsubmit="return false">
      <header>Delete a duck</header>
      <div>URL-safe Duck key:
        {sp}
        <input id="duckDeleteDuckKey" type="text" name="key" required>
      </div>
      <footer><!--Legal disclaimer goes here if needed.--></footer>

      <div class="farSide">
        <button id="duckDeleteCancel" type="button">
          {{msg meaning="Games.dialogCancel" desc="IBID"}}Cancel{{/msg}}
        </button>
        <button id="duckDeleteOk" class="secondary" type="submit">
          {{msg meaning="Games.dialogOk" desc="IBID"}}OK{{/msg}}
        </button>
      </div>
    </form>
  </div>
{/template}
